{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.451.19169",
      "templateHash": "2595475258532172954"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "australiacentral"
    }
  },
  "functions": [],
  "variables": {
    "regionCodeLookup": {
      "australiacentral": "auc",
      "australiaeast": "aue",
      "australiasoutheast": "ase"
    },
    "shortLocation": "[variables('regionCodeLookup')[parameters('location')]]",
    "regionPrefixLookup": {
      "australiacentral": "10.0.0.0/16",
      "australiaeast": "10.1.0.0/16",
      "australiasoutheast": "10.2.0.0/16"
    },
    "regionAddressPrefix": "[variables('regionPrefixLookup')[parameters('location')]]",
    "octet1": "[int(split(variables('regionAddressPrefix'), '.')[0])]",
    "octet2": "[int(split(variables('regionAddressPrefix'), '.')[1])]",
    "regionSpokes": [
      {
        "name": "[format('{0}-vnet-spoke1', variables('shortLocation'))]",
        "prefix": "[format('{0}.{1}.4.0/24', variables('octet1'), variables('octet2'))]",
        "isStandalone": false
      },
      {
        "name": "[format('{0}-vnet-spoke2', variables('shortLocation'))]",
        "prefix": "[format('{0}.{1}.5.0/25', variables('octet1'), variables('octet2'))]",
        "isStandalone": false
      },
      {
        "name": "[format('{0}-vnet-spoke3', variables('shortLocation'))]",
        "prefix": "[format('{0}.{1}.5.128/26', variables('octet1'), variables('octet2'))]",
        "isStandalone": false
      },
      {
        "name": "[format('{0}-vnet-spokeN', variables('shortLocation'))]",
        "prefix": "[format('{0}.{1}.255.0/24', variables('octet1'), variables('octet2'))]",
        "isStandalone": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}-core-net', variables('shortLocation'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}-core-net-bastion', variables('shortLocation'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-core-net', variables('shortLocation'))), 'Microsoft.Resources/deployments', format('{0} module', format('{0}-core-net', variables('shortLocation'))))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0} module', format('{0}-core-net', variables('shortLocation')))]",
      "resourceGroup": "[format('{0}-core-net', variables('shortLocation'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "shortLocation": {
            "value": "[variables('shortLocation')]"
          },
          "regionAddressPrefix": {
            "value": "[variables('regionAddressPrefix')]"
          },
          "regionSpokes": {
            "value": "[variables('regionSpokes')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.451.19169",
              "templateHash": "7204834467700373501"
            }
          },
          "parameters": {
            "shortLocation": {
              "type": "string"
            },
            "regionAddressPrefix": {
              "type": "string"
            },
            "regionSpokes": {
              "type": "array"
            }
          },
          "functions": [],
          "variables": {
            "copy": [
              {
                "name": "routesHubVmSubnets",
                "count": "[length(variables('hubVmSubnets'))]",
                "input": {
                  "name": "[format('to-hub-{0}-subnet', toUpper(variables('hubVmSubnets')[copyIndex('routesHubVmSubnets')].name))]",
                  "properties": {
                    "addressPrefix": "[variables('hubVmSubnets')[copyIndex('routesHubVmSubnets')].prefix]",
                    "nextHopType": "VirtualAppliance",
                    "nextHopIpAddress": "[variables('routeTableNextHopIpAddress')]"
                  }
                }
              },
              {
                "name": "routesSpokeVnets",
                "count": "[length(parameters('regionSpokes'))]",
                "input": {
                  "name": "[format('to-{0}-vnet', toUpper(parameters('regionSpokes')[copyIndex('routesSpokeVnets')].name))]",
                  "properties": {
                    "addressPrefix": "[parameters('regionSpokes')[copyIndex('routesSpokeVnets')].prefix]",
                    "nextHopType": "VirtualAppliance",
                    "nextHopIpAddress": "[variables('routeTableNextHopIpAddress')]"
                  }
                }
              },
              {
                "name": "filteredRoutes1",
                "count": "[length(variables('routesHubVmSubnets'))]",
                "input": "[if(not(equals(variables('routesHubVmSubnets')[copyIndex('filteredRoutes1')].properties.addressPrefix, variables('hubVnet').vmSubnet1.prefix)), variables('routesHubVmSubnets')[copyIndex('filteredRoutes1')], createObject())]"
              },
              {
                "name": "filteredRoutes2",
                "count": "[length(variables('routesHubVmSubnets'))]",
                "input": "[if(not(equals(variables('routesHubVmSubnets')[copyIndex('filteredRoutes2')].properties.addressPrefix, variables('hubVnet').vmSubnet2.prefix)), variables('routesHubVmSubnets')[copyIndex('filteredRoutes2')], createObject())]"
              }
            ],
            "location": "[resourceGroup().location]",
            "octet1": "[int(split(parameters('regionAddressPrefix'), '.')[0])]",
            "octet2": "[int(split(parameters('regionAddressPrefix'), '.')[1])]",
            "hubVnet": {
              "name": "[format('{0}-vnet-hub', parameters('shortLocation'))]",
              "prefixes": [
                "[format('{0}.{1}.0.0/22', variables('octet1'), variables('octet2'))]"
              ],
              "gatewaySubnet": {
                "prefix": "[format('{0}.{1}.0.0/24', variables('octet1'), variables('octet2'))]"
              },
              "azureFirewallSubnet": {
                "prefix": "[format('{0}.{1}.1.0/26', variables('octet1'), variables('octet2'))]",
                "lbIpAddress": "[format('{0}.{1}.1.4', variables('octet1'), variables('octet2'))]"
              },
              "azureFirewallManagementSubnet": {
                "prefix": "[format('{0}.{1}.1.64/26', variables('octet1'), variables('octet2'))]"
              },
              "nvaSubnetManagement": {
                "name": "NvaSubnetManagement",
                "prefix": "[format('{0}.{1}.1.128/28', variables('octet1'), variables('octet2'))]"
              },
              "nvaSubnetDiagnostic": {
                "name": "NvaSubnetDiagnostic",
                "prefix": "[format('{0}.{1}.1.144/28', variables('octet1'), variables('octet2'))]"
              },
              "nvaSubnetInternal": {
                "name": "NvaSubnetInternal",
                "prefix": "[format('{0}.{1}.1.160/28', variables('octet1'), variables('octet2'))]",
                "lbIpAddress": "[format('{0}.{1}.1.174', variables('octet1'), variables('octet2'))]"
              },
              "nvaSubnetPublic": {
                "name": "NvaSubnetPublic",
                "prefix": "[format('{0}.{1}.1.176/28', variables('octet1'), variables('octet2'))]"
              },
              "azureBastionSubnet": {
                "prefix": "[format('{0}.{1}.1.192/27', variables('octet1'), variables('octet2'))]"
              },
              "routeServerSubnet": {
                "prefix": "[format('{0}.{1}.1.224/27', variables('octet1'), variables('octet2'))]"
              },
              "applicationGatewaySubnet1": {
                "name": "ApplicationGatewaySubnet1",
                "prefix": "[format('{0}.{1}.2.0/25', variables('octet1'), variables('octet2'))]"
              },
              "applicationGatewaySubnet2": {
                "name": "ApplicationGatewaySubnet2",
                "prefix": "[format('{0}.{1}.2.128/25', variables('octet1'), variables('octet2'))]"
              },
              "applicationGatewaySubnet3": {
                "name": "ApplicationGatewaySubnet3",
                "prefix": "[format('{0}.{1}.3.0/25', variables('octet1'), variables('octet2'))]"
              },
              "vmSubnet1": {
                "name": "VmSubnet1",
                "prefix": "[format('{0}.{1}.3.128/28', variables('octet1'), variables('octet2'))]"
              },
              "vmSubnet2": {
                "name": "VmSubnet2",
                "prefix": "[format('{0}.{1}.3.144/28', variables('octet1'), variables('octet2'))]"
              }
            },
            "hubVmSubnets": [
              {
                "name": "[variables('hubVnet').vmSubnet1.name]",
                "prefix": "[variables('hubVnet').vmSubnet1.prefix]",
                "isStandalone": false
              },
              {
                "name": "[variables('hubVnet').vmSubnet2.name]",
                "prefix": "[variables('hubVnet').vmSubnet2.prefix]",
                "isStandalone": false
              }
            ],
            "routeTableNextHopIpAddress": "[variables('hubVnet').azureFirewallSubnet.lbIpAddress]",
            "routesDefault": [
              {
                "name": "default",
                "properties": {
                  "addressPrefix": "0.0.0.0/0",
                  "nextHopType": "VirtualAppliance",
                  "nextHopIpAddress": "[variables('routeTableNextHopIpAddress')]"
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetManagement.name)]",
              "location": "[variables('location')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetDiagnostic.name)]",
              "location": "[variables('location')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetInternal.name)]",
              "location": "[variables('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-Inbound-RFC1918",
                    "properties": {
                      "direction": "Inbound",
                      "access": "Allow",
                      "priority": 1000,
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefixes": [
                        "10.0.0.0/8",
                        "172.16.0.0/12",
                        "192.168.0.0/16"
                      ],
                      "sourcePortRange": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetPublic.name)]",
              "location": "[variables('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-Inbound-All",
                    "properties": {
                      "direction": "Inbound",
                      "access": "Allow",
                      "priority": 1000,
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name)]",
              "location": "[variables('location')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name)]",
              "location": "[variables('location')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-spoke-vnet-nsg', parameters('shortLocation'))]",
              "location": "[variables('location')]"
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-GatewaySubnet-rt', parameters('shortLocation'))]",
              "location": "[variables('location')]",
              "properties": {
                "disableBgpRoutePropagation": false,
                "routes": "[concat(variables('routesHubVmSubnets'), variables('routesSpokeVnets'))]"
              }
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name)]",
              "location": "[variables('location')]",
              "properties": {
                "disableBgpRoutePropagation": true,
                "routes": "[concat(variables('routesDefault'), variables('routesSpokeVnets'), variables('filteredRoutes1'))]"
              }
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name)]",
              "location": "[variables('location')]",
              "properties": {
                "disableBgpRoutePropagation": true,
                "routes": "[concat(variables('routesDefault'), variables('routesSpokeVnets'), variables('filteredRoutes2'))]"
              }
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-spoke-vnet-rt', parameters('shortLocation'))]",
              "location": "[variables('location')]",
              "properties": {
                "disableBgpRoutePropagation": true,
                "routes": "[concat(variables('routesDefault'), variables('routesHubVmSubnets'))]"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[variables('hubVnet').name]",
              "location": "[variables('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[variables('hubVnet').prefixes]"
                },
                "subnets": [
                  {
                    "name": "GatewaySubnet",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').gatewaySubnet.prefix]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-GatewaySubnet-rt', parameters('shortLocation')))]"
                      }
                    }
                  },
                  {
                    "name": "AzureFirewallSubnet",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').azureFirewallSubnet.prefix]"
                    }
                  },
                  {
                    "name": "AzureFirewallManagementSubnet",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').azureFirewallManagementSubnet.prefix]"
                    }
                  },
                  {
                    "name": "[variables('hubVnet').nvaSubnetManagement.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').nvaSubnetManagement.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetManagement.name))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('hubVnet').nvaSubnetDiagnostic.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').nvaSubnetDiagnostic.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetDiagnostic.name))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('hubVnet').nvaSubnetInternal.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').nvaSubnetInternal.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetInternal.name))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('hubVnet').nvaSubnetPublic.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').nvaSubnetPublic.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetPublic.name))]"
                      }
                    }
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').azureBastionSubnet.prefix]"
                    }
                  },
                  {
                    "name": "RouteServerSubnet",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').routeServerSubnet.prefix]"
                    }
                  },
                  {
                    "name": "[variables('hubVnet').applicationGatewaySubnet1.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').applicationGatewaySubnet1.prefix]"
                    }
                  },
                  {
                    "name": "[variables('hubVnet').applicationGatewaySubnet2.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').applicationGatewaySubnet2.prefix]"
                    }
                  },
                  {
                    "name": "[variables('hubVnet').applicationGatewaySubnet3.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').applicationGatewaySubnet3.prefix]"
                    }
                  },
                  {
                    "name": "[variables('hubVnet').vmSubnet1.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').vmSubnet1.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('hubVnet').vmSubnet2.name]",
                    "properties": {
                      "addressPrefix": "[variables('hubVnet').vmSubnet2.prefix]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetDiagnostic.name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetInternal.name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetManagement.name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').nvaSubnetPublic.name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-hub-{1}-nsg', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-GatewaySubnet-rt', parameters('shortLocation')))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet1.name))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-hub-{1}-rt', parameters('shortLocation'), variables('hubVnet').vmSubnet2.name))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-core-net', variables('shortLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0} module', format('{0}-core-net-bastion', variables('shortLocation')))]",
      "resourceGroup": "[format('{0}-core-net-bastion', variables('shortLocation'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "shortLocation": {
            "value": "[variables('shortLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.451.19169",
              "templateHash": "3711671621933323270"
            }
          },
          "parameters": {
            "shortLocation": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "name": "bastion"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-{1}-ip', parameters('shortLocation'), variables('name'))]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-{1}', parameters('shortLocation'), variables('name'))]",
              "location": "[variables('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-{1}-ip', parameters('shortLocation'), variables('name')))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-{1}-ip', parameters('shortLocation'), variables('name')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-core-net-bastion', variables('shortLocation')))]"
      ]
    }
  ]
}